{
  "hash": "08d9e7ee1ec95dadb5a7cdf424fef3bb",
  "result": {
    "markdown": "---\ntitle: \"`linemap` update\"\nauthor: \"Timoth√©e Giraud\"\ndate: \"2023-11-29\"\ncategories: [linemap]\nimage: \"lm.png\"\ndraft: false\nbibliography: references.bib\n---\n\n\n<img src=\"logo.png\" align=\"right\" width=\"140\"/>The `linemap` package [@linemap] contains just one function: `linemap()`. `linemap()` displays a map made of lines using raster or gridded data.\n\nIn the previous version of the package, `linemap()` only accepted as input a `data.frame` of gridded data (in its long form: lon, lat, value). That was highly impractical.   \nThe main change introduced by this release is the ability to use a raster as input (a`SpatRaster` from `terra`).\n\n\nIn this example we use the sample dataset shipped with the package. **elevation.tif** is an elevation raster of Grenoble and the surrounding area (from SRTM).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(linemap)\nr <- terra::rast(system.file(\"tif/elevation.tif\", package = \"linemap\"))\nopar <- par(mar = c(0,0,0,0), bg = \"grey10\")\nlinemap(r)\npar(opar)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=768}\n:::\n:::\n\n\nWe can use any kind of raster data. The following example uses gridded population data.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# data preparation\nlibrary(terra)\nlibrary(sf)\n# Download\ntempzip <- tempfile()\ntempfolder <- tempdir()\ndata_url <- paste0(\"http://cidportal.jrc.ec.europa.eu/ftp/jrc-opendata/GHSL/\", \n                   \"GHS_POP_GPW4_GLOBE_R2015A/GHS_POP_GPW42015_GLOBE_R2015A_54009_1k/\", \n                   \"V1-0/GHS_POP_GPW42015_GLOBE_R2015A_54009_1k_v1_0.zip\")\ndownload.file(data_url, tempzip)\nunzip(tempzip, exdir = tempfolder)\n# Import\npop2015 <- rast(paste0(tempfolder, \n                       \"/GHS_POP_GPW42015_GLOBE_R2015A_54009_1k_v1_0/\",\n                       \"GHS_POP_GPW42015_GLOBE_R2015A_54009_1k_v1_0.tif\"))\n# Mask raster\ncenter <- st_as_sf(data.frame(x=425483.8, y=5608290), \n                   coords=(c(\"x\",\"y\")), \n                   crs = st_crs(pop2015))\ncenter <- st_buffer(center, dist = 800000)\nras <- crop(pop2015, st_bbox(center)[c(1,3,2,4)])\n# Smooth values\nmodel_r <- ras\nres(model_r) <- c(5000, 10000)\nras_res <- resample(ras, model_r, method = \"sum\")\nr <- mask(ras_res, center)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mapsf)\nmf_theme(mar = c(0,0,0,0))\nmf_map(center, col = \"black\", border = \"black\", lwd = 4)\nlinemap(r, k = .5, col = \"black\", border = \"white\", lwd = 1, add= TRUE)\nmf_title(txt = \"Population\", inner = TRUE, bg = \"#f7f7f7\", \n         fg = \"#333333\", line = 2, cex = 1.5)\nmf_credits(paste0(\"T. Giraud, 2023\\n\",\n                  \"Data : European Commission, Joint Research Centre (JRC); \", \n                  \"Columbia University, CIESIN (2015): GHS population grid, \", \n                  \"derived from GPW4.\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n`linemap` repository on GitHub: [github.com/riatelab/linemap](https://github.com/riatelab/linemap)  ",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}