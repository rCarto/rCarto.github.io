{
  "hash": "cbce150147e673362472ce782287757b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"New release of `mapsf`\"\nauthor: \"Timothée Giraud\"\ndate: \"2024-11-05\"\ncategories: [mapsf]\nimage: \"front.png\"\ndraft: false\nbibliography: references.bib\nresources:\n  - com.gpkg\n\n---\n\n\n\nAn update of `mapsf` has been deployed on CRAN.   \nThe package now includes two new functions: `mf_get_borders()` and `mf_get_pencil()`. The first function extracts borders between polygons which can be used to create discontinuities maps. The second one transforms polygons into lines, simulating a pencil drawing pattern.  \nOther changes are bug fixes and minor improvements.\n\n\nThe dataset used in the following examples concerns apartment rental prices in 2023 (<small>[source](https://www.data.gouv.fr/fr/datasets/carte-des-loyers-indicateurs-de-loyers-dannonce-par-commune-en-2023/#/resources/43618998-3b37-4a69-bb25-f321f1a93ed1)</small>).  \n<small>Download the dataset:</small> [{{< fa download >}}](com.gpkg)\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## New features\n\n\n### Discontinuities maps with `mf_get_borders()`\n\nDiscontinuities maps display the variation of a phenomenon between contiguous administrative units. This kind of representation does not focus on homogeneous zones, but rather on spatial breaks. On the map, discontinuity intensity is expressed by the thickness of the borders.\n\nThe first step to building these maps is to extract borders between units. The second step is to compute a discontinuity measure (either a ratio or an absolute difference). The third step is to display it on a map using a variations in line width. Combining these discontinuities with a choropleth representation helps to understand the discontinuity direction (which one of two regions has the higher value).\n\n`mf_get_borders()` is used to build the spatial object of borders between units. Each resulting border is described by the datasets of its two neighboring units in order to compute the discontinuity measures.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(mapsf)\n\n# import dataset \ncom <- st_read(dsn = \"com.gpkg\", layer = \"communes\", quiet = TRUE)\n\n# get borders\ncom_bo <- mf_get_borders(com) \n\n# compute the gap between prices\ncom_bo$diff <- abs(com_bo$loypredm2 - com_bo$loypredm2.1)\n\n# set a cartographic theme\nmf_theme(x = \"darkula\",\n         mar = c(.5, .5, 2, .5),\n         inner = FALSE,\n         pos = \"center\",\n         tab = FALSE)\n\n# display a choropleth map of the rent price / m²\nmf_map(x = com, var = \"loypredm2\", type = \"choro\",\n       breaks = \"ckmeans\", nbreaks = 6, pal = \"Emrld\", rev = T,\n       border = \"grey90\", lwd = .2,\n       leg_title = \"Rent price\\nindicator\\n(€ per m²)\",\n       leg_val_cex = .8, leg_val_rnd = 1, leg_pos = \"topleft\")\n\n# display discontinuities\nmf_map(x = com_bo[com_bo$diff >= 2, ], var = \"diff\", type = \"grad\",\n       breaks = c(2, 4, 6, 8, 8.9), lwd = c(1, 4, 10, 14), col = \"red\",\n       leg_title = \"Price gap\\n(€ per m²)\",\n       leg_val_rnd = 1, leg_pos = \"topleft\", leg_adj = c(8, 0),\n       leg_val_cex = .8)\n\n# Layout elements\nmf_arrow(\"topright\")\nmf_credits(\n  txt = paste(\n    'Timothée Giraud, 2024\\n',\n    'ADMIN EXPRESS COG CARTO - IGN, 2024\\n',\n    '\"Carte des loyers\" - Ministère de la Transition écologique, 2023'\n  )\n)\nmf_title(\"Discontinuities in rental price levels in Paris\")\nmf_annotation(x = com_bo[order(com_bo$diff, decreasing = TRUE), ][1, ],\n              txt = paste0(\"The largest gap is between\\nParis XVII (29.2€/m²) and\\n\", \n                           \"Saint-Ouen (20.3€/m²)\"),\n              halo = TRUE, s = 2, col_arrow = \"white\", col_txt = \"white\",\n              pos = \"topright\")\nmf_scale(5)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=768}\n:::\n:::\n\n\n\n\n### Colored pencil maps with `mf_get_pencil()`\n\n`mf_get_pencil()` transforms POLYGONS or MULTIPOLYGONS geometries in MULTILINESTRINGS geometries. This function creates a layer that mimicks a pencil drawing pattern. The following code details how to use the function:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# transform the POLYGON layer in a MULTILINESTRING layer\ncomx <- mf_get_pencil(com, size = 250)\n\n# set a cartographic theme\nmf_theme(\"candy\")\n\n# display the map as a choropleth map\nmf_map(x = comx, var = \"loypredm2\", type = \"choro\",\n       breaks = \"ckmeans\", nbreaks = 6, pal = \"Mako\",\n       leg_title = \"Rent price\\nindicator\\n(€ per m²)\",\n       leg_val_cex = .8, leg_val_rnd = 1, leg_pos = \"topleft\")\nmf_map(com, add = T, col = NA, border = getOption(\"mapsf.fg\"))\n\n# Layout elements\nmf_arrow(\"topright\")\nmf_credits(\n  txt = paste(\n    'Timothée Giraud, 2024\\n',\n    'ADMIN EXPRESS COG CARTO - IGN, 2024\\n',\n    '\"Carte des loyers\" - Ministère de la Transition écologique, 2023'\n  )\n)\nmf_title(\"Rental price levels in Paris\")\nmf_scale(5)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Bug fixes and improvements\n\n### 2 lines titles\nA fix has made it easier to create titles on two lines. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set a suitable cartographic thme\nmf_theme(bg = \"grey90\", fg = \"black\", \n         mar = c(0,0,2.2,0), inner = FALSE, line = 2.2, cex = 1, pos = \"left\")\nmf_map(com)\n# display the title\nmf_title(\"This title is easlily\\ndisplayed on 2 lines\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=336}\n:::\n:::\n\n\n\n\n### A better north arrow\n\nThe north arrow has been redesigned. It is now possible to change its size (cex), fine-tune its position (adj) or use a true north azimuth (align).  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmf_theme(\"jsk\")\n# use a projection that will produce a map where the north is not at the top\ncom_usa <- st_transform(com, \"EPSG:32119\")\nmf_map(com_usa)\nmf_arrow(pos = \"topleft\", align = com_usa, cex = 2)\nmf_graticule(com_usa, pos = c(\"bottom\", \"left\"),add = TRUE)\nmf_title(txt = \"A better north arrow\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n### New classification methods\n\nThe \"Q6\" and \"ckmeans\" methods have been added to the `mf_get_breaks()` function. \n\n* The \"Q6\" method has also been added, it's a variation of the \"q6\" method.\n* The \"jenks\", \"fisher\" and \"ckmeans\" methods are based on the same concept of natural breaks and produce similar groupings.  \n\n  - The \"jenks\" method produces class boundaries that fall on data points and is slow.\n  - The \"fisher\" method produces class boundaries placed more conveniently between data points, and is faster than the \"jenks\" method.\n  - The \"ckmeans\" method produces the exact same class boundaries as the \"fisher\" method, but is much faster. It uses the optimal univariate k-means method from the `Ckmeans.1d.dp` package [@Wang2011Ckmeans]. If the \"ckmeans\" method is selected but the `Ckmeans.1d.dp` package is not installed then the \"fisher\" method is used.\n  \n  The relative speeds of these three methods may vary depending on the number of data points and the number of classes.\n\n:::{.callout-tip collapse=\"true\" title='\"fisher\" vs. \"ckmeans\"'}\nJenks isn't even included due to the prohibitive amount of time it would take.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- runif(5000)\nlibrary(microbenchmark)\nmicrobenchmark(fisher  = mf_get_breaks(x, 8, \"fisher\", largeN = 5000), \n               ckmeans = mf_get_breaks(x, 8, \"ckmeans\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUnit: milliseconds\n    expr       min       lq      mean    median        uq       max neval\n  fisher 68.162320 69.48564 71.004707 70.333813 71.618909 89.183144   100\n ckmeans  2.706476  2.81163  2.946925  2.902102  3.023941  5.651169   100\n```\n\n\n:::\n\n```{.r .cell-code}\nidentical(mf_get_breaks(x, 8, \"fisher\", largeN = 5000), \n          mf_get_breaks(x, 8, \"ckmeans\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}