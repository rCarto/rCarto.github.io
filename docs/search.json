[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog posts",
    "section": "",
    "text": "How to Build an European-Wide OSRM Server on a Desktop Computer\n\n\n\n\n\n\n\nosrm\n\n\n\n\n\n\n\n\n\n\n\nOct 9, 2023\n\n\nTimothée Giraud\n\n\n\n\n\n\n  \n\n\n\n\nNew release of mapsf\n\n\n\n\n\n\n\nmapsf\n\n\n\n\n\n\n\n\n\n\n\nJul 11, 2023\n\n\nTimothée Giraud\n\n\n\n\n\n\n  \n\n\n\n\nNew release of cartography\n\n\n\n\n\n\n\ncartography\n\n\n\n\n\n\n\n\n\n\n\nJan 20, 2023\n\n\nTimothée Giraud\n\n\n\n\n\n\n  \n\n\n\n\nNew release of mapsf\n\n\n\n\n\n\n\nmapsf\n\n\n\n\n\n\n\n\n\n\n\nDec 13, 2022\n\n\nTimothée Giraud\n\n\n\n\n\n\n  \n\n\n\n\nNew release of osrm\n\n\n\n\n\n\n\nosrm\n\n\n\n\n\n\n\n\n\n\n\nNov 4, 2022\n\n\nTimothée Giraud\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/mapsf_v0.7.0/index.html",
    "href": "posts/mapsf_v0.7.0/index.html",
    "title": "New release of mapsf",
    "section": "",
    "text": "A minor update of mapsf has been deployed on CRAN. In this article I’ll describe the changes introduced by this update."
  },
  {
    "objectID": "posts/mapsf_v0.7.0/index.html#new-features",
    "href": "posts/mapsf_v0.7.0/index.html#new-features",
    "title": "New release of mapsf",
    "section": "New features",
    "text": "New features\n\nexpandBB\nAn expandBB argument has been introduced in mf_map(). This argument allows to add some space around a map.\nThe following code displays a map with some extra space on the right side of the figure. This can be useful to add legends or annotations.\n\nlibrary(mapsf)\nlibrary(sf)\nnc_raw &lt;- st_read(system.file(\"shape/nc.shp\", package=\"sf\"), quiet = TRUE)\nnc &lt;- st_transform(nc_raw, \"EPSG:32019\")\nth &lt;- mf_theme(\"candy\", mar = c(0, 0, 0, 0), bg = \"ivory\")\nmf_map(nc, expandBB = c(0, 0, 0, .3), width = 3.5)\n\n\n\n# mf_get_ratio(nc[1,], expandBB = c(0,0.5,0,0), width = 3.5)\n\nThis addition makes the mf_init() function virtually useless. These two script produce the same output.\n\npar(mfrow = c(1,2))\n# with mf_init()\nmf_init(nc[1, ],  expandBB = c(0, .5, 0, 0))\nmf_map(nc, add = TRUE)\nmf_map(nc[1, ], col = \"red\", add = TRUE)\n# without mf_init()\nmf_map(nc[1, ], col = NA, border = NA, expandBB = c(0, .5, 0, 0))\nmf_map(nc, add = TRUE)\nmf_map(nc[1, ], col = \"red\", add = TRUE)\n\n\n\n\nThis argument has also been added to mf_raster().\n\n\nmf_graticule()\nA new mf_graticule() function has been added to the package.\n\nmf_map(nc, expandBB = c(0, .05, .1, 0))\nmf_graticule(nc, add = TRUE)\n\n\n\n\nGraticules labels can be added on the four sides of the map.\n\nmf_map(nc, expandBB = c(.1, .05, .1, .05))\nmf_graticule(nc, \n             pos = c(\"bottom\", \"left\", \"top\", \"right\"), \n             lty = 2, \n             lwd = 2, \n             add = TRUE)\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nFrom st_graticule():\nIn cartographic visualization, the use of graticules is not advised, unless the graphical output will be used for measurement or navigation, or the direction of North is important for the interpretation of the content, or the content is intended to display distortions and artifacts created by projection. Unnecessary use of graticules only adds visual clutter but little relevant information. Use of coastlines, administrative boundaries or place names permits most viewers of the output to orient themselves better than a graticule."
  },
  {
    "objectID": "posts/mapsf_v0.7.0/index.html#fixes",
    "href": "posts/mapsf_v0.7.0/index.html#fixes",
    "title": "New release of mapsf",
    "section": "Fixes",
    "text": "Fixes\n\nPipe\nThe pipe compatibility of mapsf has been enhanced and it now works on most use cases.\n\nmf_get_mtq() |&gt;\n  mf_map(col = \"ivory4\") |&gt;\n  mf_map(\"POP\", \"prop\") |&gt;\n  mf_graticule(label = FALSE, lwd = .2)\n\n\n\n\n\n\nThemes\nThe graphic theme feature has been refactored. The current theme parameters are now accessible via R options (with the mapsf. prefix).\n\n(mf_theme(\"green\"))\n\n$bg\n[1] \"#1B1D16\"\n\n$fg\n[1] \"#D7FF68\"\n\n$mar\n[1] 0.5 0.5 2.0 0.5\n\n$tab\n[1] FALSE\n\n$pos\n[1] \"center\"\n\n$inner\n[1] FALSE\n\n$line\n[1] 1.5\n\n$cex\n[1] 1\n\n$font\n[1] 2\n\ngetOption(\"mapsf.bg\")\n\n[1] \"#1B1D16\"\n\ngetOption(\"mapsf.fg\")\n\n[1] \"#D7FF68\"\n\ngetOption(\"mapsf.pos\")\n\n[1] \"center\"\n\n# etc\n\nThe current theme is applied to all maps and there is no need to use the theme argument in mf_export() or mf_init() anymore."
  },
  {
    "objectID": "posts/mapsf_v0.7.0/index.html#next-steps",
    "href": "posts/mapsf_v0.7.0/index.html#next-steps",
    "title": "New release of mapsf",
    "section": "Next steps",
    "text": "Next steps\nThe next release of mapsf will use the maplegend package (not on CRAN yet) for plotting legends. This will allow to plot horizontal legends (#19) and continuous legends for rasters (#22).\n\nSee the NEWS file for the complete list of changes."
  },
  {
    "objectID": "posts/build_osrm_server/index.html",
    "href": "posts/build_osrm_server/index.html",
    "title": "How to Build an European-Wide OSRM Server on a Desktop Computer",
    "section": "",
    "text": "Open Source Routing Machine, or OSRM (Luxen and Vetter 2011), is a routing software based on OpenStreetMap (OSM) data. OSRM can be used to find the fastest route between points, to compute time or distance matrices between set of points or to solve the traveling salesman problem.\nAs maintainer of the osrm R package (Giraud 2022) I often find myself advising users to use their own instance of OSRM to enable them to send a large number of requests and not overload the demo server. In these cases I simply point to the Docker installation instructions in the project’s README file. These instructions may not be detailed enough to build an OSRM instance on a large area.\nOSRM needs a lot of RAM to prepare the road network for requests and using only these instructions will probably result in message like this one:\nThis problem is addressed in this issue on the OSRM GitHub repository. The suggested solution is to rent a temporary server. This is not the only solution, a modern computer with a rather classical hardware configuration can actually do the job.\nIn this post I’ll explain how to build and European-wide OSRM instance on a desktop computer. These explanations are, to a certain extent, also valid when using a remote server."
  },
  {
    "objectID": "posts/build_osrm_server/index.html#hardware",
    "href": "posts/build_osrm_server/index.html#hardware",
    "title": "How to Build an European-Wide OSRM Server on a Desktop Computer",
    "section": "Hardware",
    "text": "Hardware\nI use my personal laptop computer which has a 1 TB SSD hard drive and the following config:\nOS: Debian GNU/Linux 12 (bookworm) x86_64 \nHost: HP EliteBook 840 G8 Notebook PC \nKernel: 6.1.0-10-amd64 \nCPU: 11th Gen Intel i7-1185G7 (8) @ 4.800GHz \nMemory: 31.04GB"
  },
  {
    "objectID": "posts/build_osrm_server/index.html#add-some-extra-memory",
    "href": "posts/build_osrm_server/index.html#add-some-extra-memory",
    "title": "How to Build an European-Wide OSRM Server on a Desktop Computer",
    "section": "Add some extra memory",
    "text": "Add some extra memory\nThe preparation of the OSM network for OSRM is memory intensive and will need more than the already available 32 GB of RAM. The swap memory is used when a program consume the totality of the available RAM memory. Consequently we need to extend the swap memory of our computer. I use a very large file (a 200 GB file named “swap.swap”) to be sure to not exceed the limit.\n# preallocate space to a file named swap.swap\nsudo fallocate -l 200G swap.swap\n# change file access permissions\nsudo chmod 600 swap.swap\n# set the file as a swap area\nsudo mkswap swap.swap\n# start swapping to the file\nsudo swapon swap.swap\n# modify the swapiness\nsudo sysctl vm.swappiness=20"
  },
  {
    "objectID": "posts/build_osrm_server/index.html#download-the-osm-road-network",
    "href": "posts/build_osrm_server/index.html#download-the-osm-road-network",
    "title": "How to Build an European-Wide OSRM Server on a Desktop Computer",
    "section": "Download the OSM road network",
    "text": "Download the OSM road network\nThe Geofabrik website provides OSM database extracts that can be used as input for OSRM. In our case we have downloaded the osm.pbf file for Europe (27.1 GB)."
  },
  {
    "objectID": "posts/build_osrm_server/index.html#build-the-dataset-for-osrm",
    "href": "posts/build_osrm_server/index.html#build-the-dataset-for-osrm",
    "title": "How to Build an European-Wide OSRM Server on a Desktop Computer",
    "section": "Build the dataset for OSRM",
    "text": "Build the dataset for OSRM\nThe europe-latest.osm.pbf file needs to be processed to be used by OSRM. This is done in three steps. You can change the transport mode in the first step, here we use the car profile.\n\nExtract (~5h30)\n\ndocker run -t -v \"${PWD}:/data\" ghcr.io/project-osrm/osrm-backend:v5.27.1 osrm-extract -p /opt/car.lua /data/europe-latest.osm.pbf\n\nPartition (~1h20)\n\ndocker run -t -v \"${PWD}:/data\" ghcr.io/project-osrm/osrm-backend:v5.27.1 osrm-partition /data/europe-latest.osrm\n\nCustomize (~0h10)\n\ndocker run -t -v \"${PWD}:/data\" ghcr.io/project-osrm/osrm-backend:v5.27.1 osrm-customize /data/europe-latest.osrm"
  },
  {
    "objectID": "posts/build_osrm_server/index.html#run-the-instance",
    "href": "posts/build_osrm_server/index.html#run-the-instance",
    "title": "How to Build an European-Wide OSRM Server on a Desktop Computer",
    "section": "Run the instance",
    "text": "Run the instance\nThis is the command I use to run this freshly built OSRM instance:\ndocker run --rm -t -i -p 5000:5000 -v \"${PWD}:/data\" ghcr.io/project-osrm/osrm-backend:v5.27.1 osrm-routed --algorithm mld --max-table-size 50000000 /data/europe-latest.osrm"
  },
  {
    "objectID": "posts/build_osrm_server/index.html#another-experiment",
    "href": "posts/build_osrm_server/index.html#another-experiment",
    "title": "How to Build an European-Wide OSRM Server on a Desktop Computer",
    "section": "Another experiment",
    "text": "Another experiment\nI’ve conducted the same operation on a laptop with lower capacities:\nOS: Debian GNU/Linux 12 (bookworm) x86_64 \nHost: HP EliteBook Folio 1040 G3 \nKernel: 6.1.0-12-amd64 \nCPU: Intel i7-6600U (4) @ 3.400GHz \nMemory: 15.50GB \nThe dataset build for OSRM took much longer but was ultimately successful:\n\nExtract ~56h\nPartition ~2h40\nCustomize ~1h"
  },
  {
    "objectID": "posts/build_osrm_server/index.html#example-of-use",
    "href": "posts/build_osrm_server/index.html#example-of-use",
    "title": "How to Build an European-Wide OSRM Server on a Desktop Computer",
    "section": "Example of use",
    "text": "Example of use\nThis OSRM instance will actually be used in the framework of an European research program (Granular). In this project we’ll need to request a very large number of distances and routes throughout Europe in order to create relevant accessibility indicators for rural areas.\nI’ve built a small R package relying on osrm to send queries in a parallel fashion and create “All roads lead to…” maps. The cobweb package is not bulletproof and it is not on CRAN.\nHere is a small demo:\n\n# remotes::install_github(\"rCarto/cobweb\")\nlibrary(cobweb)\ncobweb(city = \"Mainz, Germany\", \n       nroad = 3000, ncl = 8, \n       url = \"http://0.0.0.0:5000/\")\n\n\n\n\nAll Roads Lead to Mainz!"
  },
  {
    "objectID": "posts/cartography_v3.1.3/index.html",
    "href": "posts/cartography_v3.1.3/index.html",
    "title": "New release of cartography",
    "section": "",
    "text": "A new version of cartography has been released on CRAN this week. cartography is a thematic mapping package for R that has entered in maintenance mode on March 2021.\nThis release has been triggered by the upcoming retirement (archiving) of rgdal, rgeos and maptools (see R-spatial evolution: retirement of rgdal, rgeos and maptools and Progress on R-spatial evolution, Dec 2022).\nSo, this release does not import any of these packages anymore and this is done at the cost of losing one function: getTiles(). The purpose of getTiles() was to download and compose raster tiles from a large number of providers.\nFortunately, the maptiles package can be used to replace this function. It has the same features and is more robust.\nFor the same kind of reasons, smoothLayer() function has been deprecated. This function is using the SpatialPosition package to compute potentials. Potentials computations are now offered by the potential package.\n\n\n\n\n\n\nKey messages for cartography users\n\n\n\n\nConsider switching from cartography to mapsf. mapsf is the successor of cartography, it offers the same core features, it is friendlier, lighter and more robust.\n\nUse maptiles instead of getTiles(). It offers the same features using a modern packages.\nUse potential instead of smoothLayer(). It offers more features using modern packages.\n\n  \n\n\nSee the NEWS file for the complete list of changes."
  },
  {
    "objectID": "posts/mapsf_v0.6.1/index.html",
    "href": "posts/mapsf_v0.6.1/index.html",
    "title": "New release of mapsf",
    "section": "",
    "text": "The R spatial ecosystem is rich, dynamic and mature and several packages allow to import, process and represent spatial data. The mapsf package (Giraud 2022) relies on this ecosystem to integrate the creation of quality thematic maps in R workflows. mapsf uses sf objects to produce base graphics.\nA minor update of mapsf has been deployed on CRAN. In this article I’ll describe the changes introduced by this update. mapsf has noticeably gained a new function, mf_get_ratio(), that helps to create map figures with suitable width / height ratios. Most of the other changes are bug fixes and small improvements."
  },
  {
    "objectID": "posts/mapsf_v0.6.1/index.html#new-features",
    "href": "posts/mapsf_v0.6.1/index.html#new-features",
    "title": "New release of mapsf",
    "section": "New features",
    "text": "New features\n\nmf_get_ratio()\nmf_get_ratio() can be used to create map figures with a suitable width / height ratio in reports (*.Rmd, *.qmd).\nIt uses the width / height ratio of a spatial object bounding box to find a matching ratio for the map.\nThe following quarto example uses the default figure output settings (7 x 5 inches):\n\n```{r}\nlibrary(mapsf)\nmtq &lt;- mf_get_mtq()\nmf_theme(\"darkula\")\nmf_map(mtq)\n```\n\n\n\n\nThe width / height ratio of this figure is not optimal, it produces a lot of unused space on the sides of the map. It is not easy to find a correct ratio without manually fiddling with the fig-width and fig-height values and this can be exhausting.\nmf_get_ratio() helps with this task:\n\nmf_get_ratio(x = mtq, height = 5, theme = \"darkula\")\n\n[1] 4.3 5.0\n\n\nWe can use these values to obtain a much more satisfactory figure:\n\n```{r}\n#| fig-width: 4.3\n#| fig-height: 5\nmf_theme(\"darkula\")\nmf_map(mtq)\n```\n\n\n\n\nThe mf_init() function can be used to expand the map space in any direction thanks to its expandBB argument.\nLets say we want to produce a figure that uses the ink theme, with a height of 5 inches and some space left on the right of the map.\n\nmf_get_ratio(\n  x = mtq, \n  height = 5, \n  theme = \"ink\", \n  expandBB = c(0, 0, 0, .5)\n)\n\n[1] 5.95 5.00\n\n\n\n```{r}\n#| fig-width: 5.95\n#| fig-height: 5\nmf_init(x = mtq, expandBB = c(0, 0, 0, .5), theme = \"ink\")\nmf_map(mtq, add = TRUE)\nmf_title(\"Martinique\")\n```\n\n\n\n\n\n\nMaps of proportional and colored lines\nIt is now possible to create maps that combine proportional lines and colors using the prop_typo map type.\n\nmf_theme(\"default\")\nmtq &lt;- mf_get_mtq()\n# import the csv file embedded in mapsf\nmob &lt;- read.csv(system.file(\"csv/mob.csv\", package = \"mapsf\"))\n# Select links from Fort-de-France (97209))\nmob_97209 &lt;- mob[mob$i == 97209, ]\n# create an sf object of links\nmob_links &lt;- mf_get_links(x = mtq, df = mob_97209)\n# initiate a map with some space on the right\nmf_init(mtq, expandBB = c(0,0,0,.5))\nmf_map(mtq, add = TRUE)\nmf_map(\n  x = mob_links,\n  var = c(\"fij\", \"sj\"),\n  type = \"prop_typo\",\n  lwd_max = 30,\n  leg_pos = c(\"topright\", \"right\"),\n  leg_title = c(\"Nb. of commuters\", \n                \"Municipality status\")\n)\n# map layout\nmf_layout(\n  title = \"Commuting from Fort-de-France\",\n  credits = paste0(\n    \"Sources: Insee and IGN, 2018\\n\",\n    \"mapsf \", packageVersion(\"mapsf\")\n  ),\n  arrow = FALSE\n)"
  },
  {
    "objectID": "posts/mapsf_v0.6.1/index.html#bug-fixes-and-improvements",
    "href": "posts/mapsf_v0.6.1/index.html#bug-fixes-and-improvements",
    "title": "New release of mapsf",
    "section": "Bug fixes and improvements",
    "text": "Bug fixes and improvements\n\nMessages are now displayed when users map proportional symbols based on a variable that contained either NA, 0, Inf or negative values.\n\n\nlibrary(mapsf)\n# import sample dataset\nmtq &lt;- mf_get_mtq()\n# introduce NA, 0, Inf and negative values\nmtq[1:8, \"POP\"] &lt;- c(0, 0, NA, NA, Inf, -Inf, -10000, -20000)\n# display basemap\nmf_map(mtq)\nmf_map(x = mtq, var = \"POP\", type = \"prop\")\n\n2 'NA' values are not plotted on the map.\n\n\n2 '0' values are not plotted on the map.\n\n\n2 'Infinite' values are not plotted on the map.\n\n\nNegative values have been transformed into positive values.\n\n\n\n\n\n\nmf_get_breaks() is a function that helps to classify continuous variables using various methods, including the ones from classInt::classIntervals (Bivand 2022). A control has been added for Inf values and the geom method now outputs an error when all values are not strictly positive.\nIt is now possible to create maps with only one proportional symbol. This can be useful when maps are generated iterating over multiple territories: some of them may have only one point to plot (see issue #45).\n\n\nopar &lt;- par(mfrow = c(1,2))\nmtq &lt;- mf_get_mtq()\nmf_map(mtq[8:9,])\nmf_map(x = mtq[8:9, ], var = \"POP\", type = \"prop\", \n       val_max = 85000, leg_pos = \"bottomleft\")\nmf_map(mtq[10,])\nmf_map(x = mtq[10, ], var = \"POP\", type = \"prop\", \n       val_max = 85000)\npar(opar)\n\n\n\n\nSee the NEWS file for the complete list of changes."
  },
  {
    "objectID": "posts/osrm_v4.0.0/index.html",
    "href": "posts/osrm_v4.0.0/index.html",
    "title": "New release of osrm",
    "section": "",
    "text": "osrm is an interface between R and the Open Source Routing Machine (OSRM) API. OSRM (Luxen and Vetter 2011) is a routing service based on OpenStreetMap (OSM) data. This package enables the computation of routes, trips, isochrones and travel distances matrices (travel times and kilometric distances) based on the OSM road network.\nA major update of osrm has been deployed on CRAN two weeks ago. In this article I’ll describe the changes introduced by this update and explain its context: the submission of a paper (Giraud 2022) about the package in Journal of Open Source Software (JOSS)."
  },
  {
    "objectID": "posts/osrm_v4.0.0/index.html#what-has-changed",
    "href": "posts/osrm_v4.0.0/index.html#what-has-changed",
    "title": "New release of osrm",
    "section": "What has changed",
    "text": "What has changed\nThis major release introduces a number of changes to the package API, some of them are breaking changes.\n\nsp support\nUsers will no longer have the possibility to use an sp object as input or output in osrm functions. Most of #rspatial users and package developers have moved from the old sp/rgeos/rgdal trilogy toward the sf package.\n\n\nRefactoring of the request handling process\nThe way requests are sent to the OSRM server (local/remote/demo) has been refactored in order to get more informative messages. Indeed, an important share of the issues posted on the osrm GitHub repo has been about cryptic or non helpful error messages sent by the package or the server. So in this release OSRM server errors are more explicit and better transmitted to the user.\n\n\nDependencies\nOSRM request are received as json files to the package. Former versions of the package used jsonlite. Following a suggestion by Nick Young I’ve replaced this package by a much more efficient package (for large files), RcppSimdJson.\nThe construction of isochrones as polygons was based on an ad-hoc code supported by isoband. This piece of code was replicated in 2 other packages (tanaka and potential). I’ve decided to create the mapiso package to avoid an unnecessary maintenance burden and fortify the underlying code.\n\n\nInput types\nInput type checking has been largely improved. This improvement have lead to a modification of the set of valid input of functions. Most functions accept data.frame, matrix, sfc or sf objects. The way identifier are handled has also been improved (use of row.names or indexes if row.names are not relevant, e.g. for sfc objects or some matrices).\nSee the NEWS file for the complete list of changes."
  },
  {
    "objectID": "posts/osrm_v4.0.0/index.html#the-paper-in-joss",
    "href": "posts/osrm_v4.0.0/index.html#the-paper-in-joss",
    "title": "New release of osrm",
    "section": "The paper in JOSS",
    "text": "The paper in JOSS\n\n\n\n\n\nFrom JOSS documentation:\nJOSS publishes articles about research software. JOSS submissions must be open source and have an obvious research application. After submission an editor will carry out an initial check of your submission, and proceed to assign a handling editor. The handling editor will assign two or more JOSS reviewers, and the review will be carried out in the JOSS reviews repository. Authors will respond to reviewer-raised issues on the submission repository’s issue tracker.\nThe review process of the paper happens in the open. You can have a look at it here.\nSubmitting a paper to JOSS assure you to have your software inspected by a set of competent people and I can say that this process help me to make the package more ergonomic and reliable.\nIf you want more detailed information on JOSS, a paper by Smith et al. (2018) describes the motivation, design, and progress of the journal."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Information on R spatial packages maintained by Timothée Giraud."
  }
]